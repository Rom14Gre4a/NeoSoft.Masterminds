// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeoSoft.Masterminds.Infrastructure.Data;

namespace NeoSoft.Masterminds.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MastermindsDbContext))]
    [Migration("20220130164738_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MentorEntityProfessionEntity", b =>
                {
                    b.Property<int>("MentorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionsId")
                        .HasColumnType("int");

                    b.HasKey("MentorsId", "ProfessionsId");

                    b.HasIndex("ProfessionsId");

                    b.ToTable("MentorsProfessions");
                });

            modelBuilder.Entity("MentorEntityProfessionalAspectEntity", b =>
                {
                    b.Property<int>("MentorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionalAspectsId")
                        .HasColumnType("int");

                    b.HasKey("MentorsId", "ProfessionalAspectsId");

                    b.HasIndex("ProfessionalAspectsId");

                    b.ToTable("MentorsProfessionalAspects");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("InitialName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentType = "image/jpeg",
                            Extension = "jpg",
                            FileType = 1,
                            InitialName = "Unknown",
                            Name = "13666186-686e-466e-a5a8-ca06d4db7ad5"
                        });
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AppIdentityRoleClaims");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppIdentityUserClaims");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AppIdentityUserLogins");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppIdentityUserRoles");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AppIdentityUserTokens");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "d0604a7b-2414-4931-86e8-86f85daa5008",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "b568a689-bba4-40cf-83a2-84922fe2ad7e",
                            Name = "Mentor",
                            NormalizedName = "MENTOR"
                        });
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.MentorEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(8,2)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.ProfessionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.ProfessionalAspectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aspect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProfessionalAspects");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PhotoId")
                        .HasColumnType("int");

                    b.Property<string>("ProfileFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId")
                        .IsUnique()
                        .HasFilter("[PhotoId] IS NOT NULL");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.ReviewEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FromProfileId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromProfileId");

                    b.HasIndex("ToProfileId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MentorEntityProfessionEntity", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.MentorEntity", null)
                        .WithMany()
                        .HasForeignKey("MentorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.ProfessionEntity", null)
                        .WithMany()
                        .HasForeignKey("ProfessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MentorEntityProfessionalAspectEntity", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.MentorEntity", null)
                        .WithMany()
                        .HasForeignKey("MentorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.ProfessionalAspectEntity", null)
                        .WithMany()
                        .HasForeignKey("ProfessionalAspectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityRoleClaim", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserClaim", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserLogin", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserRole", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppIdentityUserToken", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppRole", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", "Mentor")
                        .WithMany()
                        .HasForeignKey("MentorId");

                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Mentor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", "Profile")
                        .WithOne("AppUser")
                        .HasForeignKey("NeoSoft.Masterminds.Domain.Models.Entities.Identity.AppUser", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.MentorEntity", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", "Profile")
                        .WithOne("Mentor")
                        .HasForeignKey("NeoSoft.Masterminds.Domain.Models.Entities.MentorEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.FileEntity", "Photo")
                        .WithOne()
                        .HasForeignKey("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", "PhotoId");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.ReviewEntity", b =>
                {
                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", "FromProfile")
                        .WithMany("SentReviews")
                        .HasForeignKey("FromProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", "ToProfile")
                        .WithMany("RecivedReviews")
                        .HasForeignKey("ToProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FromProfile");

                    b.Navigation("ToProfile");
                });

            modelBuilder.Entity("NeoSoft.Masterminds.Domain.Models.Entities.ProfileEntity", b =>
                {
                    b.Navigation("AppUser");

                    b.Navigation("Mentor");

                    b.Navigation("RecivedReviews");

                    b.Navigation("SentReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
