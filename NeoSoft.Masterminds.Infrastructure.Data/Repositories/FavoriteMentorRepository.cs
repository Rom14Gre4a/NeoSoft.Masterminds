using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using NeoSoft.Masterminds.Domain.Interfaces;
using NeoSoft.Masterminds.Domain.Models.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NeoSoft.Masterminds.Infrastructure.Data.Repositories
{
    public class FavoriteMentorRepository : IFavoriteMentorRepository
    {
        private readonly MastermindsDbContext _dbContext;
        private readonly ILogger<FavoriteMentorRepository> _logger;
        public FavoriteMentorRepository(ILogger<FavoriteMentorRepository> logger, MastermindsDbContext dbContext)
        {
            _dbContext = dbContext;
            _logger = logger;
        }


        public async Task<List<MentorEntity>> GetAll()
        {
            var favorite = _dbContext.Mentors.AsNoTracking();
            var mentors = await favorite
            .Include(x => x.Profile).ThenInclude(x => x.Photo)
            .Include(m => m.Professions)
            .Include(m => m.Favorites)
            .ToListAsync();




































































































































































































































































































































































































































































































































































            return mentors;
        }
        //public async Task<List<MentorEntity>> Update()
    }
}
